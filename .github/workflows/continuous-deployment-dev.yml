name: AOE Continuous Deployment (DEV)
on: 
  workflow_dispatch:
  push:
    branches:
      - dev
permissions:
      id-token: write
      contents: read      
jobs:
  AOE-CD:
    environment: dev
    runs-on: ubuntu-latest
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AOE_LOCATION: ${{ secrets.AOE_LOCATION }}
      AOE_NAMEPREFIX: ${{ secrets.AOE_NAMEPREFIX }}
      AOE_WORKSPACENAME: ${{ secrets.AOE_WORKSPACENAME }}
      AOE_WORKSPACERG: ${{ secrets.AOE_WORKSPACERG }}
    steps:
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub for the ${{ github.ref }} branch of the ${{ github.repository }} repository!"
      - name: Installing modules
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Az.Accounts,Az.Resources,Az.Storage,Az.OperationalInsights,Az.Sql,Az.Automation,Microsoft.Graph.Authentication,Microsoft.Graph.Identity.DirectoryManagement -Force
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Login via Az module
        uses: azure/login@hf_447_release
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
      - name: Create Deployment Settings JSON file
        run: |
          echo '{
            "SubscriptionId": "'"$AZURE_SUBSCRIPTION_ID"'",
            "NamePrefix": "'"$AOE_NAMEPREFIX"'",
            "WorkspaceReuse": "y",
            "WorkspaceName": "'"$AOE_WORKSPACENAME"'",
            "WorkspaceResourceGroupName": "'"$AOE_WORKSPACERG"'",
            "DeployWorkbooks": "y",
            "TargetLocation": "'"$AOE_LOCATION"'",
            "DeployBenefitsUsageDependencies": "n"
          }' > ./deploymentSettings.json          
      - name: Testing PowerShell script call
        shell: pwsh
        run: |
          ./Deploy-AzureOptimizationEngine.ps1 -SilentDeploymentSettingsPath ./deploymentSettings.json -TemplateUri "https://raw.githubusercontent.com/helderpinto/AzureOptimizationEngine/dev/azuredeploy.bicep" -DoPartialUpgrade
      - run: echo "üçè This job's status is ${{ job.status }}."
